openapi: 3.0.1
info:
  title: Messari API
  version: 0.0.1
  description: Combined API specification for all Messari services
  contact:
    name: Messari Engineering
    url: https://messari.io
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: https://api.messari.io
    description: Production server
  - url: https://api.staging.messari.io
    description: Staging server
  - url: http://localhost:8080
    description: Local development server

# Global security requirement
security:
  - apiKey: []

# Import common components
components:
  schemas:
    # Common schemas
    APIError:
      $ref: "./common/components.yaml#/components/schemas/APIError"
    APIResponseWithMetadata:
      $ref: "./common/components.yaml#/components/schemas/APIResponseWithMetadata"
    PaginationResult:
      $ref: "./common/components.yaml#/components/schemas/PaginationResult"

  parameters:
    # Common parameters
    page:
      $ref: "./common/parameters.yaml#/components/parameters/page"
    limit:
      $ref: "./common/parameters.yaml#/components/parameters/limit"
    apiKey:
      $ref: "./common/parameters.yaml#/components/parameters/apiKey"
  securitySchemes:
    apiKey:
      type: apiKey
      name: x-messari-api-key
      in: header
      description: API key for authentication

# Import paths from all services
paths:
  # AI Service Paths
  /ai/v1/chat/completions:
    $ref: "./services/ai/openapi.yaml#/paths/~1ai~1v1~1chat~1completions"
  /ai/v1/classification/extraction:
    $ref: './services/ai/openapi.yaml#/paths/~1ai~1v1~1classification~1extraction'

  # Asset Service Paths
  /metrics/v2/assets:
    $ref: './services/asset/openapi.yaml#/paths/~1metrics~1v2~1assets'
  /metrics/v2/assets/details:
    $ref: './services/asset/openapi.yaml#/paths/~1metrics~1v2~1assets~1details'
  /metrics/v2/assets/metrics:
    $ref: './services/asset/openapi.yaml#/paths/~1metrics~1v2~1assets~1metrics'
  /metrics/v2/assets/{entityIdentifier}/metrics/{datasetSlug}/time-series:
    $ref: './services/asset/openapi.yaml#/paths/~1metrics~1v2~1assets~1{entityIdentifier}~1metrics~1{datasetSlug}~1time-series'
  /metrics/v2/assets/{entityIdentifier}/metrics/{datasetSlug}/time-series/{granularity}:
    $ref: './services/asset/openapi.yaml#/paths/~1metrics~1v2~1assets~1{entityIdentifier}~1metrics~1{datasetSlug}~1time-series~1{granularity}'
  /metrics/v2/assets/ath:
    $ref: './services/asset/openapi.yaml#/paths/~1metrics~1v2~1assets~1ath'
  /metrics/v2/assets/roi:
    $ref: './services/asset/openapi.yaml#/paths/~1metrics~1v2~1assets~1roi'

  # Intel Service Paths
  /intel/v1/events:
    $ref: "./services/intel/openapi.yaml#/paths/~1intel~1v1~1events"
  /intel/v1/events/{eventId}:
    $ref: "./services/intel/openapi.yaml#/paths/~1intel~1v1~1events~1{eventId}"
  /intel/v1/assets:
    $ref: "./services/intel/openapi.yaml#/paths/~1intel~1v1~1assets"

  # News Service Paths
  /news/v1/news/assets:
    $ref: "./services/news/openapi.yaml#/paths/~1news~1v1~1news~1assets"
  /news/v1/news/feed:
    $ref: "./services/news/openapi.yaml#/paths/~1news~1v1~1news~1feed"
  /news/v1/news/sources:
    $ref: "./services/news/openapi.yaml#/paths/~1news~1v1~1news~1sources"

  # MarketData Service Paths
  /marketdata/v1/assets/roi:
    $ref: "./services/marketdata/openapi.yaml#/paths/~1marketdata~1v1~1assets~1roi"
  /marketdata/v1/assets/ath:
    $ref: "./services/marketdata/openapi.yaml#/paths/~1marketdata~1v1~1assets~1ath"
  /marketdata/v1/assets/{assetId}/price:
    $ref: "./services/marketdata/openapi.yaml#/paths/~1marketdata~1v1~1assets~1{assetId}~1price"
  /marketdata/v1/assets/{assetId}/roi:
    $ref: "./services/marketdata/openapi.yaml#/paths/~1marketdata~1v1~1assets~1{assetId}~1roi"
  /marketdata/v1/assets/{assetId}/ath:
    $ref: "./services/marketdata/openapi.yaml#/paths/~1marketdata~1v1~1assets~1{assetId}~1ath"

  # Recaps Service Paths
  /ai-digest/api/v1/recap:
    $ref: "./services/recaps/openapi.yaml#/paths/~1ai-digest~1api~1v1~1recap"
  /ai-digest/api/v1/exchange-recap:
    $ref: "./services/recaps/openapi.yaml#/paths/~1ai-digest~1api~1v1~1exchange-recap"
  /ai-digest/api/v1/exchange-rankings-recap:
    $ref: "./services/recaps/openapi.yaml#/paths/~1ai-digest~1api~1v1~1exchange-rankings-recap"

  # Research Service Paths
  /research/v1/reports:
    $ref: "./services/research/openapi.yaml#/paths/~1research~1v1~1reports"
  /research/v1/reports/{id}:
    $ref: "./services/research/openapi.yaml#/paths/~1research~1v1~1reports~1{id}"
  /research/v1/reports/tags:
    $ref: "./services/research/openapi.yaml#/paths/~1research~1v1~1reports~1tags"

  # Diligence Service Paths
  /diligence/v1/reports/preview:
    $ref: "./services/diligence/openapi.yaml#/paths/~1diligence~1v1~1reports~1preview"
  /diligence/v1/report/asset/{assetId}:
    $ref: "./services/diligence/openapi.yaml#/paths/~1diligence~1v1~1report~1asset~1{assetId}"
  # A build issue is preventing /diligence/v1/report/asset/{assetId} and /diligence/v1/report/{id} from 
  # being used at the same time as the path template resolution explodes. They return the same values so only using one endpoint for now
  # /diligence/v1/report/{id}: 
  #   $ref: "./services/diligence/openapi.yaml#/paths/~1diligence~1v1~1report~1{id}"
  
  # Fundraising Service Paths
  /funding/v1/rounds:
    $ref: "./services/fundraising/openapi.yaml#/paths/~1funding~1v1~1rounds"
  /funding/v1/rounds/investors:
    $ref: "./services/fundraising/openapi.yaml#/paths/~1funding~1v1~1rounds~1investors"
  /funding/v1/mergers-and-acquisitions:
    $ref: "./services/fundraising/openapi.yaml#/paths/~1funding~1v1~1mergers-and-acquisitions"
  /funding/v1/organizations:
    $ref: "./services/fundraising/openapi.yaml#/paths/~1funding~1v1~1organizations"
  /funding/v1/projects:
    $ref: "./services/fundraising/openapi.yaml#/paths/~1funding~1v1~1projects"
  
  # Token Unlocks Service Paths
  /token-unlocks/v1/assets:
    $ref: "./services/token-unlocks/openapi.yaml#/paths/~1token-unlocks~1v1~1assets"
  /token-unlocks/v1/allocations:
    $ref: "./services/token-unlocks/openapi.yaml#/paths/~1token-unlocks~1v1~1allocations"
  /token-unlocks/v1/assets/{assetId}/vesting-schedule:
    $ref: "./services/token-unlocks/openapi.yaml#/paths/~1token-unlocks~1v1~1assets~1{assetId}~1vesting-schedule"
  /token-unlocks/v1/assets/{assetId}/unlocks:
    $ref: "./services/token-unlocks/openapi.yaml#/paths/~1token-unlocks~1v1~1assets~1{assetId}~1unlocks"
  /token-unlocks/v1/assets/{assetId}/events:
    $ref: "./services/token-unlocks/openapi.yaml#/paths/~1token-unlocks~1v1~1assets~1{assetId}~1events"
    
