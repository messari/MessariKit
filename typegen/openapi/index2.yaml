components:
    schemas:
        APIError:
            $ref: "./common/components.yaml#/components/schemas/APIError"
        APIResponseWithMetadata:
            $ref: "./common/components.yaml#/components/schemas/APIResponseWithMetadata"
        PaginationResult:
            $ref: "./common/components.yaml#/components/schemas/PaginationResult"
        V2Asset:
            properties:
                allTimeHigh:
                    $ref: '#/components/schemas/V2AssetATH'
                category:
                    type: string
                contractAddresses:
                    items:
                        $ref: '#/components/schemas/ContractAddress'
                    type: array
                description:
                    type: string
                id:
                    type: string
                links:
                    items:
                        $ref: '#/components/schemas/AssetV2Link'
                    type: array
                marketData:
                    $ref: '#/components/schemas/AssetV2MarketData'
                name:
                    type: string
                networkSlugs:
                    items:
                        type: string
                    type: array
                protocolSlugs:
                    items:
                        type: string
                    type: array
                rank:
                    format: int64
                    type: integer
                returnOnInvestment:
                    $ref: '#/components/schemas/V2AssetROI'
                sector:
                    type: string
                slug:
                    type: string
                symbol:
                    type: string
                tags:
                    items:
                        type: string
                    type: array
            required:
                - id
                - name
                - slug
                - symbol
                - category
                - sector
                - tags
                - description
                - links
                - marketData
                - networkSlugs
                - protocolSlugs
                - returnOnInvestment
                - allTimeHigh
                - contractAddresses
            type: object
        V2AssetATH:
            properties:
                allTimeHigh:
                    format: double
                    type: number
                allTimeHighDate:
                    format: date-time
                    type: string
                allTimeHighPercentDown:
                    format: double
                    type: number
                allTimeHighTimeSinceSeconds:
                    format: double
                    type: number
                breakevenMultiple:
                    format: double
                    type: number
                cycleLow:
                    format: double
                    type: number
                cycleLowDate:
                    format: date-time
                    type: string
                cycleLowPercentUp:
                    format: double
                    type: number
                cycleLowTimeSinceSeconds:
                    format: double
                    type: number
            required:
                - allTimeHigh
                - allTimeHighDate
                - allTimeHighTimeSinceSeconds
                - allTimeHighPercentDown
                - breakevenMultiple
                - cycleLow
                - cycleLowDate
                - cycleLowTimeSinceSeconds
                - cycleLowPercentUp
            type: object
        AssetComparisonItem:
            properties:
                allTimeHigh:
                    $ref: '#/components/schemas/V2AssetATH'
                category:
                    type: string
                id:
                    type: string
                name:
                    type: string
                returnOnInvestment:
                    $ref: '#/components/schemas/V2AssetROI'
                sector:
                    type: string
                slug:
                    type: string
                symbol:
                    type: string
                tags:
                    items:
                        type: string
                    type: array
            required:
                - id
                - name
                - slug
                - symbol
                - category
                - sector
                - tags
            type: object
        V2AssetEntity:
            properties:
                id:
                    type: string
                name:
                    type: string
                slug:
                    type: string
                symbol:
                    type: string
            required:
                - id
                - name
                - slug
                - symbol
            type: object
        V2AssetListItem:
            properties:
                category:
                    type: string
                hasDiligence:
                    type: boolean
                hasFundraising:
                    type: boolean
                hasIntel:
                    type: boolean
                hasMarketData:
                    type: boolean
                hasNews:
                    type: boolean
                hasProposals:
                    type: boolean
                hasResearch:
                    type: boolean
                hasTokenUnlocks:
                    type: boolean
                id:
                    type: string
                name:
                    type: string
                rank:
                    format: double
                    type: number
                sector:
                    type: string
                slug:
                    type: string
                symbol:
                    type: string
                tags:
                    items:
                        type: string
                    type: array
            required:
                - id
                - name
                - slug
                - symbol
                - category
                - sector
                - tags
                - rank
                - hasDiligence
                - hasIntel
                - hasMarketData
                - hasNews
                - hasProposals
                - hasResearch
                - hasTokenUnlocks
                - hasFundraising
            type: object
        V2AssetROI:
            properties:
                priceChange1y:
                    format: double
                    type: number
                priceChange3y:
                    format: double
                    type: number
                priceChange5y:
                    format: double
                    type: number
                priceChange7d:
                    format: double
                    type: number
                priceChange24h:
                    format: double
                    type: number
                priceChange30d:
                    format: double
                    type: number
                priceChangeMTD:
                    format: double
                    type: number
                priceChangeQTD:
                    format: double
                    type: number
                priceChangeYTD:
                    format: double
                    type: number
            required:
                - priceChange24h
                - priceChange7d
                - priceChange30d
                - priceChange1y
                - priceChange3y
                - priceChange5y
                - priceChangeMTD
                - priceChangeQTD
                - priceChangeYTD
            type: object
        ContractAddress:
            properties:
                contractAddress:
                    type: string
                networkName:
                    type: string
                networkSlug:
                    type: string
            required:
                - networkName
                - networkSlug
                - contractAddress
            type: object
        CreateWatchlistRequest:
            properties:
                assetIds:
                    items:
                        type: string
                    type: array
                title:
                    type: string
            required:
                - title
                - assetIds
            type: object
        Exchange:
            properties:
                country:
                    type: string
                globalRank30D:
                    format: int64
                    type: integer
                id:
                    type: string
                metrics:
                    $ref: '#/components/schemas/ExchangeMetrics'
                name:
                    type: string
                region:
                    type: string
                relatedExchangeIDs:
                    items:
                        type: string
                    type: array
                slug:
                    type: string
                type:
                    type: string
                typeRank30D:
                    format: int64
                    type: integer
                yearEstablished:
                    format: int64
                    type: integer
            required:
                - id
                - name
                - slug
                - type
                - yearEstablished
                - region
                - country
                - typeRank30D
                - globalRank30D
                - relatedExchangeIDs
                - metrics
            type: object
        ExchangeEntity:
            properties:
                id:
                    type: string
                name:
                    type: string
                slug:
                    type: string
            required:
                - id
                - name
                - slug
            type: object
        ExchangeMetrics:
            properties:
                assetsCount:
                    format: int64
                    type: integer
                marketsCount:
                    format: int64
                    type: integer
                trades24Hour:
                    format: int64
                    type: integer
                volume24Hour:
                    format: double
                    type: number
            required:
                - volume24Hour
                - trades24Hour
                - assetsCount
                - marketsCount
            type: object
        AllowanceInfo:
            properties:
                creditsAllocated:
                    format: int64
                    type: integer
                endDate:
                    format: date-time
                    type: string
                id:
                    type: string
                isActive:
                    type: boolean
                remainingCredits:
                    format: int64
                    type: integer
                startDate:
                    format: date-time
                    type: string
                teamId:
                    format: int64
                    type: integer
            required:
                - id
                - teamId
                - creditsAllocated
                - startDate
                - isActive
                - endDate
                - remainingCredits
            type: object
        GetNetworksV2Response:
            properties:
                data:
                    items:
                        $ref: '#/components/schemas/NetworkV2'
                    type: array
                metadata:
                    $ref: '#/components/schemas/SnapshotListingMetadata'
            required:
                - data
                - metadata
            type: object
        AssetV2Link:
            properties:
                name:
                    type: string
                url:
                    type: string
            required:
                - name
                - url
            type: object
        Market:
            properties:
                baseAsset:
                    $ref: '#/components/schemas/V2AssetEntity'
                baseAssetSector:
                    type: string
                exchange:
                    $ref: '#/components/schemas/ExchangeEntity'
                firstTradeAt:
                    format: date-time
                    type: string
                id:
                    type: string
                isNewMarket:
                    type: boolean
                isRecentlyListed:
                    type: boolean
                lastTradeAt:
                    format: date-time
                    type: string
                liveness:
                    type: string
                metrics:
                    $ref: '#/components/schemas/MarketMetrics'
                network:
                    $ref: '#/components/schemas/NetworkEntity'
                quoteAsset:
                    $ref: '#/components/schemas/V2AssetEntity'
                quoteAssetSector:
                    type: string
                sectors:
                    items:
                        type: string
                    type: array
            required:
                - id
                - baseAsset
                - baseAssetSector
                - quoteAsset
                - quoteAssetSector
                - exchange
                - sectors
                - firstTradeAt
                - lastTradeAt
                - isNewMarket
                - isRecentlyListed
                - liveness
                - metrics
            type: object
        MarketCap:
            properties:
                circulatingUsd:
                    format: double
                    type: number
                dominance:
                    format: double
                    type: number
                fullyDilutedUsd:
                    format: double
                    type: number
            required:
                - circulatingUsd
                - fullyDilutedUsd
                - dominance
            type: object
        AssetV2MarketData:
            properties:
                marketcap:
                    $ref: '#/components/schemas/MarketCap'
                ohlcv1HourUsd:
                    $ref: '#/components/schemas/OHLCV'
                ohlcv24HourUsd:
                    $ref: '#/components/schemas/OHLCV'
                priceBtc:
                    format: double
                    type: number
                priceEth:
                    format: double
                    type: number
                priceUsd:
                    format: double
                    type: number
                supply:
                    $ref: '#/components/schemas/Supply'
                volume24Hour:
                    format: double
                    type: number
            required:
                - priceUsd
                - priceBtc
                - priceEth
                - volume24Hour
                - ohlcv1HourUsd
                - ohlcv24HourUsd
                - supply
                - marketcap
            type: object
        MarketMetrics:
            properties:
                exchangeVolumePercentage24h:
                    format: double
                    type: number
                latestPrice24hClose:
                    format: double
                    type: number
                latestPrice24hHigh:
                    format: double
                    type: number
                latestPrice24hLow:
                    format: double
                    type: number
                latestPrice24hOpen:
                    format: double
                    type: number
                premiumDiscount:
                    format: double
                    type: number
                tradeCount24h:
                    format: int64
                    type: integer
                volume24h:
                    format: double
                    type: number
            required:
                - exchangeVolumePercentage24h
                - latestPrice24hOpen
                - latestPrice24hHigh
                - latestPrice24hLow
                - latestPrice24hClose
                - premiumDiscount
                - volume24h
                - tradeCount24h
            type: object
        ModifyWatchlistAssetsRequest:
            properties:
                action:
                    enum:
                        - add
                        - remove
                    type: string
                assetIds:
                    items:
                        type: string
                    type: array
            required:
                - assetIds
                - action
            type: object
        Network:
            properties:
                id:
                    type: string
                metrics:
                    $ref: '#/components/schemas/NetworkMetrics2'
                name:
                    type: string
                slug:
                    type: string
            required:
                - id
                - name
                - slug
                - metrics
            type: object
        NetworkAddresses:
            properties:
                activeAddresses:
                    format: int64
                    type: integer
                newAddresses:
                    format: int64
                    type: integer
                returningAddresses:
                    format: int64
                    type: integer
            required:
                - activeAddresses
                - newAddresses
                - returningAddresses
            type: object
        NetworkBlockProduction:
            properties:
                circulatingMarketcap:
                    format: double
                    type: number
                estimatedNakamotoCoefficient:
                    format: double
                    type: number
            required:
                - estimatedNakamotoCoefficient
                - circulatingMarketcap
            type: object
        NetworkBlocks:
            properties:
                maxBlockNumber:
                    format: int64
                    type: integer
                minBlockNumber:
                    format: int64
                    type: integer
                totalBlocks:
                    format: int64
                    type: integer
            required:
                - totalBlocks
                - minBlockNumber
                - maxBlockNumber
            type: object
        NetworkContracts:
            properties:
                activeContracts:
                    format: int64
                    type: integer
                contractCallGasPayers:
                    format: int64
                    type: integer
                contractDeployers:
                    format: int64
                    type: integer
                gasSpenders:
                    format: int64
                    type: integer
                newContractDeployers:
                    format: int64
                    type: integer
                newContractsCalled:
                    format: int64
                    type: integer
                newContractsDeployed:
                    format: int64
                    type: integer
                returningContractsCalled:
                    format: int64
                    type: integer
                totalContractsCalled:
                    format: int64
                    type: integer
                uniqueContractCallers:
                    format: int64
                    type: integer
            required:
                - activeContracts
                - totalContractsCalled
                - newContractsCalled
                - returningContractsCalled
                - uniqueContractCallers
                - newContractsDeployed
                - contractCallGasPayers
                - contractDeployers
                - newContractDeployers
                - gasSpenders
            type: object
        NetworkCore:
            properties:
                activeAddresses:
                    format: int64
                    type: integer
                blockTimeMs:
                    format: int64
                    type: integer
                contractDeployers:
                    format: int64
                    type: integer
                newContractsDeployed:
                    format: int64
                    type: integer
                totalTransactions:
                    format: int64
                    type: integer
            required:
                - blockTimeMs
                - totalTransactions
                - activeAddresses
                - newContractsDeployed
                - contractDeployers
            type: object
        NetworkEntity:
            properties:
                id:
                    type: string
                name:
                    type: string
                slug:
                    type: string
            required:
                - id
                - name
                - slug
            type: object
        NetworkFees:
            properties:
                avgFeePerTransaction:
                    format: double
                    type: number
                feeMedian:
                    format: double
                    type: number
                feeRevenue:
                    format: double
                    type: number
                rolling90DAvgTransactionFee:
                    format: double
                    type: number
            required:
                - feeRevenue
                - feeMedian
                - rolling90DAvgTransactionFee
                - avgFeePerTransaction
            type: object
        NetworkFinancial:
            properties:
                avgFeePerTransactionUSD:
                    format: double
                    type: number
                expensesUSD:
                    format: double
                    type: number
                feeMedianUSD:
                    format: double
                    type: number
                feesSupplySideUSD:
                    format: double
                    type: number
                feesTotalUSD:
                    format: double
                    type: number
                revenueUSD:
                    format: double
                    type: number
                rolling7dAvgTransactionFeeUSD:
                    format: double
                    type: number
                tokenIncentivesUSD:
                    format: double
                    type: number
            required:
                - feesTotalUSD
                - feeMedianUSD
                - rolling7dAvgTransactionFeeUSD
                - avgFeePerTransactionUSD
                - feesSupplySideUSD
                - expensesUSD
                - revenueUSD
                - tokenIncentivesUSD
            type: object
        NetworkMetrics2:
            properties:
                addresses:
                    $ref: '#/components/schemas/NetworkAddresses'
                blockProduction:
                    $ref: '#/components/schemas/NetworkBlockProduction'
                blocks:
                    $ref: '#/components/schemas/NetworkBlocks'
                contracts:
                    $ref: '#/components/schemas/NetworkContracts'
                fees:
                    $ref: '#/components/schemas/NetworkFees'
                options:
                    $ref: '#/components/schemas/Options'
                transactions:
                    $ref: '#/components/schemas/NetworkTransactions'
            required:
                - transactions
                - addresses
                - contracts
                - options
                - fees
                - blocks
                - blockProduction
            type: object
        NetworkMetricsV2:
            properties:
                core:
                    $ref: '#/components/schemas/NetworkCore'
                financial:
                    $ref: '#/components/schemas/NetworkFinancial'
                stablecoin:
                    $ref: '#/components/schemas/NetworkStablecoin'
            required:
                - core
                - financial
                - stablecoin
            type: object
        NetworkStablecoin:
            properties:
                stablecoinMintsUSD:
                    format: double
                    type: number
                stablecoinOutstandingSupplyUSD:
                    format: double
                    type: number
                stablecoinRedemptionsUSD:
                    format: double
                    type: number
                stablecoinTransferVolumeUSD:
                    format: double
                    type: number
            required:
                - stablecoinMintsUSD
                - stablecoinRedemptionsUSD
                - stablecoinOutstandingSupplyUSD
                - stablecoinTransferVolumeUSD
            type: object
        NetworkTransactions:
            properties:
                successfulTransactions:
                    format: int64
                    type: integer
                totalTransactions:
                    format: int64
                    type: integer
                unsuccessfulTransactions:
                    format: int64
                    type: integer
            required:
                - totalTransactions
                - successfulTransactions
                - unsuccessfulTransactions
            type: object
        NetworkV2:
            properties:
                id:
                    type: string
                metrics:
                    $ref: '#/components/schemas/NetworkMetricsV2'
                name:
                    type: string
                slug:
                    type: string
            required:
                - id
                - name
                - slug
                - metrics
            type: object
        OHLCV:
            properties:
                close:
                    format: double
                    type: number
                high:
                    format: double
                    type: number
                low:
                    format: double
                    type: number
                open:
                    format: double
                    type: number
                volume:
                    format: double
                    type: number
            required:
                - open
                - high
                - low
                - close
                - volume
            type: object
        Options:
            properties:
                volume:
                    format: double
                    type: number
            required:
                - volume
            type: object
        Permission:
            properties:
                active:
                    type: boolean
                name:
                    type: string
                permissionSlug:
                    enum:
                        - aggregation_permission
                        - ai_digest_permission
                        - ai_toolkit_permission
                        - asset_permission
                        - copilot_permission
                        - core_metrics_permission
                        - diligence_service_permission
                        - funding_permission
                        - governor_service_permission
                        - intel_permission
                        - market_data_permission
                        - news_permission
                        - research_permission
                        - signal_permission
                        - token_unlocks_permission
                    type: string
            required:
                - name
                - permissionSlug
                - active
            type: object
        PermissionsResponse:
            properties:
                expiresAt:
                    format: date-time
                    type: string
                hasAllAccess:
                    type: boolean
                hasFullMarketDataGranularity:
                    type: boolean
                permissions:
                    items:
                        $ref: '#/components/schemas/Permission'
                    type: array
            required:
                - permissions
                - hasFullMarketDataGranularity
                - hasAllAccess
            type: object
        TimeseriesPointSchema:
            properties:
                description:
                    type: string
                is_timestamp:
                    type: boolean
                name:
                    type: string
                slug:
                    type: string
            required:
                - name
                - slug
                - description
                - is_timestamp
            type: object
        SnapshotListingMetadata:
            properties:
                page:
                    format: int64
                    type: integer
                pageSize:
                    format: int64
                    type: integer
                totalPages:
                    format: int64
                    type: integer
                totalRows:
                    format: int64
                    type: integer
            required:
                - pageSize
                - page
                - totalRows
                - totalPages
            type: object
        Supply:
            properties:
                circulating:
                    format: double
                    type: number
                max:
                    format: double
                    type: number
                total:
                    format: double
                    type: number
            required:
                - circulating
                - total
                - max
            type: object
        TimeseriesCatalog:
            properties:
                datasets:
                    items:
                        $ref: '#/components/schemas/TimeseriesDataset'
                    type: array
            required:
                - datasets
            type: object
        TimeseriesData:
            properties:
                points:
                    items:
                        items:
                            type: number
                        type: array
                    type: array
            required:
                - points
            type: object
        TimeseriesDataset:
            properties:
                granularities:
                    items:
                        enum:
                            - ""
                            - 1m
                            - 5m
                            - 15m
                            - 30m
                            - 1h
                            - 6h
                            - 1d
                            - 1w
                            - 30d
                            - 1q
                            - 1y
                        type: string
                    type: array
                metrics:
                    items:
                        $ref: '#/components/schemas/TimeseriesPointSchema'
                    type: array
                slug:
                    type: string
            required:
                - slug
                - granularities
                - metrics
            type: object
        TimeseriesMetadata:
            properties:
                granularity:
                    enum:
                        - ""
                        - 1m
                        - 5m
                        - 15m
                        - 30m
                        - 1h
                        - 6h
                        - 1d
                        - 1w
                        - 30d
                        - 1q
                        - 1y
                    type: string
                pointSchemas:
                    items:
                        $ref: '#/components/schemas/TimeseriesPointSchema'
                    type: array
            required:
                - pointSchemas
                - granularity
            type: object
        UpdateWatchlistRequest:
            properties:
                assetIds:
                    items:
                        type: string
                    type: array
                title:
                    type: string
            type: object
        Watchlist:
            properties:
                assetIds:
                    items:
                        type: string
                    type: array
                createdAt:
                    format: date-time
                    type: string
                id:
                    type: string
                title:
                    type: string
                updatedAt:
                    format: date-time
                    type: string
            required:
                - id
                - title
                - assetIds
                - createdAt
                - updatedAt
            type: object
    securitySchemes:
        apiKey:
            in: header
            name: X-Messari-API-Key
            type: apiKey
info:
    description: This API combines functionality from multiple Messari services.
    title: Combined Messari API
    version: 1.0.0
openapi: 3.0.0
paths:
    # AI Service Paths
    /ai/v1/chat/completions:
      $ref: "./services/ai/openapi.yaml#/paths/~1ai~1v1~1chat~1completions"
    /ai/v1/classification/extraction:
      $ref: "./services/ai/openapi.yaml#/paths/~1ai~1v1~1classification~1extraction"
    /ai/openai/chat/completions:
      $ref: "./services/ai/openapi.yaml#/paths/~1ai~1openai~1chat~1completions"

    /metrics/v1/exchanges:
        get:
            description: Get a list of exchanges with metadata and associated metrics snapshot.
            operationId: getExchanges
            parameters:
                - in: query
                  name: limit
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: pageSize
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: page
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: type
                  schema:
                    type: string
                - in: query
                  name: typeRankCutoff
                  schema:
                    format: double
                    type: number
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    data:
                                        items:
                                            $ref: '#/components/schemas/Exchange'
                                        type: array
                                    error:
                                        type: string
                                    metadata:
                                        $ref: '#/components/schemas/SnapshotListingMetadata'
                                required:
                                    - data
                                type: object
                    description: Default response
                "400":
                    content:
                        application/json:
                            schema:
                                properties:
                                    data: {}
                                    error:
                                        type: string
                                required:
                                    - data
                                type: object
                    description: Bad Request
                "401":
                    content:
                        application/json:
                            schema:
                                properties:
                                    data: {}
                                    error:
                                        type: string
                                required:
                                    - data
                                type: object
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                properties:
                                    data: {}
                                    error:
                                        type: string
                                required:
                                    - data
                                type: object
                    description: Internal Server Error
            security:
                - apiKey: []
            summary: List Exchanges
            tags:
                - CoreMetrics/exchanges

    /metrics/v1/exchanges/{entityIdentifier}/metrics/{datasetSlug}/time-series/{granularity}:
        get:
            description: Fetch timeseries metrics for a specific exchange.
            operationId: getExchangeTimeseries
            parameters:
                - in: path
                  name: entityIdentifier
                  required: true
                  schema:
                    type: string
                - in: path
                  name: datasetSlug
                  required: true
                  schema:
                    type: string
                - in: path
                  name: granularity
                  required: true
                  schema:
                    type: string
                - in: query
                  name: start
                  schema:
                    type: string
                - in: query
                  name: end
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    data:
                                        $ref: '#/components/schemas/TimeseriesData'
                                    error:
                                        type: string
                                    metadata:
                                        $ref: '#/components/schemas/TimeseriesMetadata'
                                required:
                                    - data
                                type: object
                    description: Default response
                "400":
                    content:
                        application/json:
                            schema:
                                properties:
                                    data: {}
                                    error:
                                        type: string
                                required:
                                    - data
                                type: object
                    description: Bad Request
                "401":
                    content:
                        application/json:
                            schema:
                                properties:
                                    data: {}
                                    error:
                                        type: string
                                required:
                                    - data
                                type: object
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                properties:
                                    data: {}
                                    error:
                                        type: string
                                required:
                                    - data
                                type: object
                    description: Internal Server Error
            security:
                - apiKey: []
            summary: Get Exchange Timeseries Metrics
            tags:
                - CoreMetrics/exchanges
    /metrics/v1/exchanges/{exchangeIdentifier}:
        get:
            description: Get detailed information for a specific exchange.
            operationId: getExchange
            parameters:
                - in: path
                  name: exchangeIdentifier
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    data:
                                        $ref: '#/components/schemas/Exchange'
                                    error:
                                        type: string
                                required:
                                    - data
                                type: object
                    description: Default response
                "400":
                    content:
                        application/json:
                            schema:
                                properties:
                                    data: {}
                                    error:
                                        type: string
                                required:
                                    - data
                                type: object
                    description: Bad Request
                "401":
                    content:
                        application/json:
                            schema:
                                properties:
                                    data: {}
                                    error:
                                        type: string
                                required:
                                    - data
                                type: object
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                properties:
                                    data: {}
                                    error:
                                        type: string
                                required:
                                    - data
                                type: object
                    description: Internal Server Error
            security:
                - apiKey: []
            summary: Get Exchange Details
            tags:
                - CoreMetrics/exchanges
    /metrics/v1/exchanges/metrics:
        get:
            description: Get metric catalog of datasets for exchanges.
            operationId: getExchangeMetrics
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    data:
                                        $ref: '#/components/schemas/TimeseriesCatalog'
                                    error:
                                        type: string
                                required:
                                    - data
                                type: object
                    description: Default response
                "400":
                    content:
                        application/json:
                            schema:
                                properties:
                                    data: {}
                                    error:
                                        type: string
                                required:
                                    - data
                                type: object
                    description: Bad Request
                "401":
                    content:
                        application/json:
                            schema:
                                properties:
                                    data: {}
                                    error:
                                        type: string
                                required:
                                    - data
                                type: object
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                properties:
                                    data: {}
                                    error:
                                        type: string
                                required:
                                    - data
                                type: object
                    description: Internal Server Error
            security:
                - apiKey: []
            summary: List Exchange Metrics
            tags:
                - CoreMetrics/exchanges
    /metrics/v1/markets:
        get:
            description: Retrieves a list of markets. Results can be filtered by exchange, quote asset, base asset and 24h volume
            operationId: getMarkets
            parameters:
                - in: query
                  name: limit
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: pageSize
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: page
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: exchangeId
                  schema:
                    type: string
                - in: query
                  name: exchangeSlug
                  schema:
                    type: string
                - in: query
                  name: quoteAssetId
                  schema:
                    type: string
                - in: query
                  name: quoteAssetSlug
                  schema:
                    type: string
                - in: query
                  name: baseAssetId
                  schema:
                    type: string
                - in: query
                  name: baseAssetSlug
                  schema:
                    type: string
                - in: query
                  name: volume24hAbove
                  schema:
                    format: double
                    type: number
                - in: query
                  name: volume24hBelow
                  schema:
                    format: double
                    type: number
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    data:
                                        items:
                                            $ref: '#/components/schemas/Market'
                                        type: array
                                    error:
                                        type: string
                                    metadata:
                                        $ref: '#/components/schemas/SnapshotListingMetadata'
                                required:
                                    - data
                                type: object
                    description: Default response
                "400":
                    content:
                        application/json:
                            schema:
                                properties:
                                    data: {}
                                    error:
                                        type: string
                                required:
                                    - data
                                type: object
                    description: Bad Request
                "401":
                    content:
                        application/json:
                            schema:
                                properties:
                                    data: {}
                                    error:
                                        type: string
                                required:
                                    - data
                                type: object
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                properties:
                                    data: {}
                                    error:
                                        type: string
                                required:
                                    - data
                                type: object
                    description: Internal Server Error
            security:
                - apiKey: []
            summary: List Markets
            tags:
                - CoreMetrics/markets
    /metrics/v1/markets/{entityIdentifier}/metrics/{datasetSlug}/time-series/{granularity}:
        get:
            description: Retrieve a specific market's timeseries data
            operationId: getMarketTimeseries
            parameters:
                - in: path
                  name: entityIdentifier
                  required: true
                  schema:
                    type: string
                - in: path
                  name: datasetSlug
                  required: true
                  schema:
                    type: string
                - in: path
                  name: granularity
                  required: true
                  schema:
                    type: string
                - in: query
                  name: start
                  schema:
                    type: string
                - in: query
                  name: end
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    data:
                                        $ref: '#/components/schemas/TimeseriesData'
                                    error:
                                        type: string
                                    metadata:
                                        $ref: '#/components/schemas/TimeseriesMetadata'
                                required:
                                    - data
                                type: object
                    description: Default response
                "400":
                    content:
                        application/json:
                            schema:
                                properties:
                                    data: {}
                                    error:
                                        type: string
                                required:
                                    - data
                                type: object
                    description: Bad Request
                "401":
                    content:
                        application/json:
                            schema:
                                properties:
                                    data: {}
                                    error:
                                        type: string
                                required:
                                    - data
                                type: object
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                properties:
                                    data: {}
                                    error:
                                        type: string
                                required:
                                    - data
                                type: object
                    description: Internal Server Error
            security:
                - apiKey: []
            summary: Get market timeseries data
            tags:
                - CoreMetrics/markets
    /metrics/v1/markets/{marketIdentifier}:
        get:
            description: Retrieve a specific market
            operationId: getMarket
            parameters:
                - in: path
                  name: marketIdentifier
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    data:
                                        $ref: '#/components/schemas/Market'
                                    error:
                                        type: string
                                required:
                                    - data
                                type: object
                    description: Default response
                "400":
                    content:
                        application/json:
                            schema:
                                properties:
                                    data: {}
                                    error:
                                        type: string
                                required:
                                    - data
                                type: object
                    description: Bad Request
                "401":
                    content:
                        application/json:
                            schema:
                                properties:
                                    data: {}
                                    error:
                                        type: string
                                required:
                                    - data
                                type: object
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                properties:
                                    data: {}
                                    error:
                                        type: string
                                required:
                                    - data
                                type: object
                    description: Internal Server Error
            security:
                - apiKey: []
            summary: Get market
            tags:
                - CoreMetrics/markets
    /metrics/v1/markets/metrics:
        get:
            description: Returns a list of timeseries metrics available for exchanges.
            operationId: getMarketMetrics
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    data:
                                        $ref: '#/components/schemas/TimeseriesCatalog'
                                    error:
                                        type: string
                                required:
                                    - data
                                type: object
                    description: Default response
                "400":
                    content:
                        application/json:
                            schema:
                                properties:
                                    data: {}
                                    error:
                                        type: string
                                required:
                                    - data
                                type: object
                    description: Bad Request
                "401":
                    content:
                        application/json:
                            schema:
                                properties:
                                    data: {}
                                    error:
                                        type: string
                                required:
                                    - data
                                type: object
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                properties:
                                    data: {}
                                    error:
                                        type: string
                                required:
                                    - data
                                type: object
                    description: Internal Server Error
            security:
                - apiKey: []
            summary: List Exchange Metrics
            tags:
                - CoreMetrics/markets
    /metrics/v1/networks:
        get:
            description: Retrieve a list of networks
            operationId: getNetworks
            parameters:
                - in: query
                  name: limit
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: pageSize
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: page
                  schema:
                    format: int64
                    type: integer
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    data:
                                        items:
                                            $ref: '#/components/schemas/Network'
                                        type: array
                                    error:
                                        type: string
                                    metadata:
                                        $ref: '#/components/schemas/SnapshotListingMetadata'
                                required:
                                    - data
                                type: object
                    description: Default response
                "400":
                    content:
                        application/json:
                            schema:
                                properties:
                                    data: {}
                                    error:
                                        type: string
                                required:
                                    - data
                                type: object
                    description: Bad Request
                "401":
                    content:
                        application/json:
                            schema:
                                properties:
                                    data: {}
                                    error:
                                        type: string
                                required:
                                    - data
                                type: object
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                properties:
                                    data: {}
                                    error:
                                        type: string
                                required:
                                    - data
                                type: object
                    description: Internal Server Error
            security:
                - apiKey: []
            summary: Get networks
            tags:
                - CoreMetrics/networks
    /metrics/v1/networks/{entityIdentifier}/metrics/{datasetSlug}/time-series/{granularity}:
        get:
            description: Retrieve a specific network's timeseries data
            operationId: getNetworkTimeseries
            parameters:
                - in: path
                  name: entityIdentifier
                  required: true
                  schema:
                    type: string
                - in: path
                  name: datasetSlug
                  required: true
                  schema:
                    type: string
                - in: path
                  name: granularity
                  required: true
                  schema:
                    type: string
                - in: query
                  name: start
                  schema:
                    type: string
                - in: query
                  name: end
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    data:
                                        $ref: '#/components/schemas/TimeseriesData'
                                    error:
                                        type: string
                                    metadata:
                                        $ref: '#/components/schemas/TimeseriesMetadata'
                                required:
                                    - data
                                type: object
                    description: Default response
                "400":
                    content:
                        application/json:
                            schema:
                                properties:
                                    data: {}
                                    error:
                                        type: string
                                required:
                                    - data
                                type: object
                    description: Bad Request
                "401":
                    content:
                        application/json:
                            schema:
                                properties:
                                    data: {}
                                    error:
                                        type: string
                                required:
                                    - data
                                type: object
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                properties:
                                    data: {}
                                    error:
                                        type: string
                                required:
                                    - data
                                type: object
                    description: Internal Server Error
            security:
                - apiKey: []
            summary: Get network timeseries data
            tags:
                - CoreMetrics/networks
    /metrics/v1/networks/{networkIdentifier}:
        get:
            description: Retrieve a specific network
            operationId: getNetwork
            parameters:
                - in: path
                  name: networkIdentifier
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    data:
                                        $ref: '#/components/schemas/Network'
                                    error:
                                        type: string
                                required:
                                    - data
                                type: object
                    description: Default response
                "400":
                    content:
                        application/json:
                            schema:
                                properties:
                                    data: {}
                                    error:
                                        type: string
                                required:
                                    - data
                                type: object
                    description: Bad Request
                "401":
                    content:
                        application/json:
                            schema:
                                properties:
                                    data: {}
                                    error:
                                        type: string
                                required:
                                    - data
                                type: object
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                properties:
                                    data: {}
                                    error:
                                        type: string
                                required:
                                    - data
                                type: object
                    description: Internal Server Error
            security:
                - apiKey: []
            summary: Get network
            tags:
                - CoreMetrics/networks
    /metrics/v1/networks/metrics:
        get:
            description: Get metric catalog of datasets for networks.
            operationId: getNetworkMetrics
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    data:
                                        $ref: '#/components/schemas/TimeseriesCatalog'
                                    error:
                                        type: string
                                required:
                                    - data
                                type: object
                    description: Default response
                "400":
                    content:
                        application/json:
                            schema:
                                properties:
                                    data: {}
                                    error:
                                        type: string
                                required:
                                    - data
                                type: object
                    description: Bad Request
                "401":
                    content:
                        application/json:
                            schema:
                                properties:
                                    data: {}
                                    error:
                                        type: string
                                required:
                                    - data
                                type: object
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                properties:
                                    data: {}
                                    error:
                                        type: string
                                required:
                                    - data
                                type: object
                    description: Internal Server Error
            security:
                - apiKey: []
            summary: List Exchange Metrics
            tags:
                - CoreMetrics/networks
    /metrics/v2/assets:
        get:
            description: Retrieve a list of assets
            operationId: getAssetsV2
            parameters:
                - in: query
                  name: category
                  schema:
                    type: string
                - in: query
                  name: sector
                  schema:
                    type: string
                - in: query
                  name: tags
                  schema:
                    items:
                        type: string
                    type: array
                - in: query
                  name: search
                  schema:
                    type: string
                - in: query
                  name: limit
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: hasDiligence
                  schema:
                    type: boolean
                - in: query
                  name: hasIntel
                  schema:
                    type: boolean
                - in: query
                  name: hasMarketData
                  schema:
                    type: boolean
                - in: query
                  name: hasNews
                  schema:
                    type: boolean
                - in: query
                  name: hasProposals
                  schema:
                    type: boolean
                - in: query
                  name: hasResearch
                  schema:
                    type: boolean
                - in: query
                  name: hasTokenUnlocks
                  schema:
                    type: boolean
                - in: query
                  name: hasFundraising
                  schema:
                    type: boolean
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    data:
                                        items:
                                            $ref: '#/components/schemas/V2AssetListItem'
                                        type: array
                                    error:
                                        type: string
                                required:
                                    - data
                                type: object
                    description: Default response
                "400":
                    content:
                        application/json:
                            schema:
                                properties:
                                    data: {}
                                    error:
                                        type: string
                                required:
                                    - data
                                type: object
                    description: Bad Request
                "401":
                    content:
                        application/json:
                            schema:
                                properties:
                                    data: {}
                                    error:
                                        type: string
                                required:
                                    - data
                                type: object
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                properties:
                                    data: {}
                                    error:
                                        type: string
                                required:
                                    - data
                                type: object
                    description: Internal Server Error
            security:
                - apiKey: []
            summary: Get assets
            tags:
                - CoreMetrics/assets
    /metrics/v2/assets/{entityIdentifier}/metrics/{datasetSlug}/time-series:
        get:
            description: Retrieve a specific asset's timeseries data
            operationId: getAssetTimeseries
            parameters:
                - in: path
                  name: entityIdentifier
                  required: true
                  schema:
                    type: string
                - in: path
                  name: datasetSlug
                  required: true
                  schema:
                    type: string
                - in: query
                  name: start
                  schema:
                    type: string
                - in: query
                  name: end
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    data:
                                        $ref: '#/components/schemas/TimeseriesData'
                                    error:
                                        type: string
                                    metadata:
                                        $ref: '#/components/schemas/TimeseriesMetadata'
                                required:
                                    - data
                                type: object
                    description: Default response
                "400":
                    content:
                        application/json:
                            schema:
                                properties:
                                    data: {}
                                    error:
                                        type: string
                                required:
                                    - data
                                type: object
                    description: Bad Request
                "401":
                    content:
                        application/json:
                            schema:
                                properties:
                                    data: {}
                                    error:
                                        type: string
                                required:
                                    - data
                                type: object
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                properties:
                                    data: {}
                                    error:
                                        type: string
                                required:
                                    - data
                                type: object
                    description: Internal Server Error
            security:
                - apiKey: []
            summary: Get asset timeseries data
            tags:
                - CoreMetrics/assets
    /metrics/v2/assets/{entityIdentifier}/metrics/{datasetSlug}/time-series/{granularity}:
        get:
            description: Retrieve a specific asset's timeseries data
            operationId: getAssetTimeseriesWithGranularity
            parameters:
                - in: path
                  name: entityIdentifier
                  required: true
                  schema:
                    type: string
                - in: path
                  name: datasetSlug
                  required: true
                  schema:
                    type: string
                - in: path
                  name: granularity
                  required: true
                  schema:
                    type: string
                - in: query
                  name: start
                  schema:
                    type: string
                - in: query
                  name: end
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    data:
                                        $ref: '#/components/schemas/TimeseriesData'
                                    error:
                                        type: string
                                    metadata:
                                        $ref: '#/components/schemas/TimeseriesMetadata'
                                required:
                                    - data
                                type: object
                    description: Default response
                "400":
                    content:
                        application/json:
                            schema:
                                properties:
                                    data: {}
                                    error:
                                        type: string
                                required:
                                    - data
                                type: object
                    description: Bad Request
                "401":
                    content:
                        application/json:
                            schema:
                                properties:
                                    data: {}
                                    error:
                                        type: string
                                required:
                                    - data
                                type: object
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                properties:
                                    data: {}
                                    error:
                                        type: string
                                required:
                                    - data
                                type: object
                    description: Internal Server Error
            security:
                - apiKey: []
            summary: Get asset timeseries data
            tags:
                - CoreMetrics/assets
    /metrics/v2/assets/ath:
        get:
            description: Retrieve a specific asset's ATH
            operationId: getAssetsV2ATH
            parameters:
                - in: query
                  name: ids
                  schema:
                    type: string
                - in: query
                  name: slugs
                  schema:
                    type: string
                - in: query
                  name: category
                  schema:
                    type: string
                - in: query
                  name: sector
                  schema:
                    type: string
                - in: query
                  name: tags
                  schema:
                    items:
                        type: string
                    type: array
                - in: query
                  name: search
                  schema:
                    type: string
                - in: query
                  name: limit
                  schema:
                    format: int64
                    type: integer
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    data:
                                        items:
                                            $ref: '#/components/schemas/AssetComparisonItem'
                                        type: array
                                    error:
                                        type: string
                                required:
                                    - data
                                type: object
                    description: Default response
                "400":
                    content:
                        application/json:
                            schema:
                                properties:
                                    data: {}
                                    error:
                                        type: string
                                required:
                                    - data
                                type: object
                    description: Bad Request
                "401":
                    content:
                        application/json:
                            schema:
                                properties:
                                    data: {}
                                    error:
                                        type: string
                                required:
                                    - data
                                type: object
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                properties:
                                    data: {}
                                    error:
                                        type: string
                                required:
                                    - data
                                type: object
                    description: Internal Server Error
            security:
                - apiKey: []
            summary: Get asset ATH
            tags:
                - CoreMetrics/assets
    /metrics/v2/assets/details:
        get:
            description: Retrieve a specific asset's details
            operationId: getAssetDetails
            parameters:
                - in: query
                  name: ids
                  schema:
                    type: string
                - in: query
                  name: slugs
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    data:
                                        items:
                                            $ref: '#/components/schemas/V2Asset'
                                        type: array
                                    error:
                                        type: string
                                required:
                                    - data
                                type: object
                    description: Default response
                "400":
                    content:
                        application/json:
                            schema:
                                properties:
                                    data: {}
                                    error:
                                        type: string
                                required:
                                    - data
                                type: object
                    description: Bad Request
                "401":
                    content:
                        application/json:
                            schema:
                                properties:
                                    data: {}
                                    error:
                                        type: string
                                required:
                                    - data
                                type: object
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                properties:
                                    data: {}
                                    error:
                                        type: string
                                required:
                                    - data
                                type: object
                    description: Internal Server Error
            security:
                - apiKey: []
            summary: Get asset details
            tags:
                - CoreMetrics/assets
    /metrics/v2/assets/metrics:
        get:
            description: Get metric catalog of datasets for assets.
            operationId: getAssetsTimeseriesCatalog
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    data:
                                        $ref: '#/components/schemas/TimeseriesCatalog'
                                    error:
                                        type: string
                                required:
                                    - data
                                type: object
                    description: Default response
                "400":
                    content:
                        application/json:
                            schema:
                                properties:
                                    data: {}
                                    error:
                                        type: string
                                required:
                                    - data
                                type: object
                    description: Bad Request
                "401":
                    content:
                        application/json:
                            schema:
                                properties:
                                    data: {}
                                    error:
                                        type: string
                                required:
                                    - data
                                type: object
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                properties:
                                    data: {}
                                    error:
                                        type: string
                                required:
                                    - data
                                type: object
                    description: Internal Server Error
            security:
                - apiKey: []
            summary: List Exchange Metrics
            tags:
                - CoreMetrics/assets
    /metrics/v2/assets/roi:
        get:
            description: Retrieve a specific asset's ROI
            operationId: getAssetsV2ROI
            parameters:
                - in: query
                  name: ids
                  schema:
                    type: string
                - in: query
                  name: slugs
                  schema:
                    type: string
                - in: query
                  name: category
                  schema:
                    type: string
                - in: query
                  name: sector
                  schema:
                    type: string
                - in: query
                  name: tags
                  schema:
                    items:
                        type: string
                    type: array
                - in: query
                  name: search
                  schema:
                    type: string
                - in: query
                  name: limit
                  schema:
                    format: int64
                    type: integer
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    data:
                                        items:
                                            $ref: '#/components/schemas/AssetComparisonItem'
                                        type: array
                                    error:
                                        type: string
                                required:
                                    - data
                                type: object
                    description: Default response
                "400":
                    content:
                        application/json:
                            schema:
                                properties:
                                    data: {}
                                    error:
                                        type: string
                                required:
                                    - data
                                type: object
                    description: Bad Request
                "401":
                    content:
                        application/json:
                            schema:
                                properties:
                                    data: {}
                                    error:
                                        type: string
                                required:
                                    - data
                                type: object
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                properties:
                                    data: {}
                                    error:
                                        type: string
                                required:
                                    - data
                                type: object
                    description: Internal Server Error
            security:
                - apiKey: []
            summary: Get asset ROI
            tags:
                - CoreMetrics/assets
    # Intel Service Paths
    /intel/v1/events:
      $ref: "./services/intel/openapi.yaml#/paths/~1intel~1v1~1events"
    /intel/v1/events/{eventId}:
      $ref: "./services/intel/openapi.yaml#/paths/~1intel~1v1~1events~1{eventId}"
    /intel/v1/assets:
      $ref: "./services/intel/openapi.yaml#/paths/~1intel~1v1~1assets"
    
    # News Service Paths
    /news/v1/news/assets:
      $ref: "./services/news/openapi.yaml#/paths/~1news~1v1~1news~1assets"
    /news/v1/news/feed:
      $ref: "./services/news/openapi.yaml#/paths/~1news~1v1~1news~1feed"
    /news/v1/news/sources:
      $ref: "./services/news/openapi.yaml#/paths/~1news~1v1~1news~1sources"

    # Recaps Service Paths
    /ai-digest/api/v1/recap:
      $ref: "./services/recaps/openapi.yaml#/paths/~1ai-digest~1api~1v1~1recap"
    /ai-digest/api/v1/exchange-recap:
      $ref: "./services/recaps/openapi.yaml#/paths/~1ai-digest~1api~1v1~1exchange-recap"
    /ai-digest/api/v1/exchange-rankings-recap:
      $ref: "./services/recaps/openapi.yaml#/paths/~1ai-digest~1api~1v1~1exchange-rankings-recap"

    # Research Service Paths
    /research/v1/reports:
      $ref: "./services/research/openapi.yaml#/paths/~1research~1v1~1reports"
    /research/v1/reports/{id}:
      $ref: "./services/research/openapi.yaml#/paths/~1research~1v1~1reports~1{id}"
    /research/v1/reports/tags:
      $ref: "./services/research/openapi.yaml#/paths/~1research~1v1~1reports~1tags"

    # Diligence Service Paths
    /diligence/v1/reports/preview:
      $ref: "./services/diligence/openapi.yaml#/paths/~1diligence~1v1~1reports~1preview"
    /diligence/v1/report/asset/{assetId}:
      $ref: "./services/diligence/openapi.yaml#/paths/~1diligence~1v1~1report~1asset~1{assetId}"
    # A build issue is preventing /diligence/v1/report/asset/{assetId} and /diligence/v1/report/{id} from
    # being used at the same time as the path template resolution explodes. They return the same values so only using one endpoint for now
    # /diligence/v1/report/{id}:
    #   $ref: "./services/diligence/openapi.yaml#/paths/~1diligence~1v1~1report~1{id}"

    # Fundraising Service Paths
    /funding/v1/rounds:
      $ref: "./services/fundraising/openapi.yaml#/paths/~1funding~1v1~1rounds"
    /funding/v1/rounds/investors:
      $ref: "./services/fundraising/openapi.yaml#/paths/~1funding~1v1~1rounds~1investors"
    /funding/v1/mergers-and-acquisitions:
      $ref: "./services/fundraising/openapi.yaml#/paths/~1funding~1v1~1mergers-and-acquisitions"
    /funding/v1/organizations:
      $ref: "./services/fundraising/openapi.yaml#/paths/~1funding~1v1~1organizations"
    /funding/v1/projects:
      $ref: "./services/fundraising/openapi.yaml#/paths/~1funding~1v1~1projects"

    # Token Unlocks Service Paths
    /token-unlocks/v1/assets:
      $ref: "./services/token-unlocks/openapi.yaml#/paths/~1token-unlocks~1v1~1assets"
    /token-unlocks/v1/allocations:
      $ref: "./services/token-unlocks/openapi.yaml#/paths/~1token-unlocks~1v1~1allocations"
    /token-unlocks/v1/assets/{assetId}/vesting-schedule:
      $ref: "./services/token-unlocks/openapi.yaml#/paths/~1token-unlocks~1v1~1assets~1{assetId}~1vesting-schedule"
    /token-unlocks/v1/assets/{assetId}/unlocks:
      $ref: "./services/token-unlocks/openapi.yaml#/paths/~1token-unlocks~1v1~1assets~1{assetId}~1unlocks"
    /token-unlocks/v1/assets/{assetId}/events:
      $ref: "./services/token-unlocks/openapi.yaml#/paths/~1token-unlocks~1v1~1assets~1{assetId}~1events"

    /user-management/v1/api/credits/allowance:
        get:
            description: "#### Controller: \n\n`github.com/messari/user-service/internal/api/handler/permissioned/credit.(*creditHandler).GetTeamAllowance`\n\n---\n\n"
            operationId: getTeamAllowance
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    data:
                                        $ref: '#/components/schemas/AllowanceInfo'
                                    error:
                                        type: string
                                required:
                                    - data
                                type: object
                    description: Default response
                "400":
                    content:
                        application/json:
                            schema:
                                properties:
                                    data: {}
                                    error:
                                        type: string
                                required:
                                    - data
                                type: object
                    description: Bad Request
                "401":
                    content:
                        application/json:
                            schema:
                                properties:
                                    data: {}
                                    error:
                                        type: string
                                required:
                                    - data
                                type: object
                    description: Unauthorized
                "404":
                    content:
                        application/json:
                            schema:
                                properties:
                                    data: {}
                                    error:
                                        type: string
                                required:
                                    - data
                                type: object
                    description: Not Found
                "500":
                    content:
                        application/json:
                            schema:
                                properties:
                                    data: {}
                                    error:
                                        type: string
                                required:
                                    - data
                                type: object
                    description: Internal Server Error
            security:
                - apiKey: []
            summary: Get a team's current credit allowance
            tags:
                - UserManagement/Credit Allowances
    /user-management/v1/api/permissions:
        get:
            description: Returns all available permissions with flags indicating which ones are granted to the current user
            operationId: getPermissions
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    data:
                                        $ref: '#/components/schemas/PermissionsResponse'
                                    error:
                                        type: string
                                required:
                                    - data
                                type: object
                    description: Default response
                "400":
                    content:
                        application/json:
                            schema:
                                properties:
                                    data: {}
                                    error:
                                        type: string
                                required:
                                    - data
                                type: object
                    description: Bad Request
                "401":
                    content:
                        application/json:
                            schema:
                                properties:
                                    data: {}
                                    error:
                                        type: string
                                required:
                                    - data
                                type: object
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                properties:
                                    data: {}
                                    error:
                                        type: string
                                required:
                                    - data
                                type: object
                    description: Internal Server Error
            security:
                - apiKey: []
            summary: Get all permissions with active status
            tags:
                - UserManagement/Permissions
    /user-management/v1/watchlists:
        get:
            description: Get all watchlists for the authenticated user
            operationId: listWatchlists
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    data:
                                        items:
                                            $ref: '#/components/schemas/Watchlist'
                                        type: array
                                    error:
                                        type: string
                                required:
                                    - data
                                type: object
                    description: Default response
                "400":
                    content:
                        application/json:
                            schema:
                                properties:
                                    data: {}
                                    error:
                                        type: string
                                required:
                                    - data
                                type: object
                    description: Bad Request
                "403":
                    content:
                        application/json:
                            schema:
                                properties:
                                    data: {}
                                    error:
                                        type: string
                                required:
                                    - data
                                type: object
                    description: Forbidden
                "500":
                    content:
                        application/json:
                            schema:
                                properties:
                                    data: {}
                                    error:
                                        type: string
                                required:
                                    - data
                                type: object
                    description: Internal Server Error
            security:
                - apiKey: []
            summary: List user's watchlists
            tags:
                - UserManagement/watchlist
        post:
            description: Create a new watchlist for the authenticated user
            operationId: createWatchlist
            requestBody:
                content:
                    'application/json':
                        schema:
                            $ref: '#/components/schemas/CreateWatchlistRequest'
                required: true
            responses:
                "201":
                    content:
                        application/json:
                            schema:
                                properties:
                                    data:
                                        $ref: '#/components/schemas/Watchlist'
                                    error:
                                        type: string
                                required:
                                    - data
                                type: object
                    description: Default response
                "400":
                    content:
                        application/json:
                            schema:
                                properties:
                                    data: {}
                                    error:
                                        type: string
                                required:
                                    - data
                                type: object
                    description: Bad Request
                "403":
                    content:
                        application/json:
                            schema:
                                properties:
                                    data: {}
                                    error:
                                        type: string
                                required:
                                    - data
                                type: object
                    description: Forbidden
                "500":
                    content:
                        application/json:
                            schema:
                                properties:
                                    data: {}
                                    error:
                                        type: string
                                required:
                                    - data
                                type: object
                    description: Internal Server Error
            security:
                - apiKey: []
            summary: Create a new watchlist
            tags:
                - UserManagement/watchlist
    /user-management/v1/watchlists/{id}:
        delete:
            description: Delete a specific watchlist by ID for the authenticated user
            operationId: deleteWatchlist
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: No Content
                "400":
                    content:
                        application/json:
                            schema:
                                properties:
                                    data: {}
                                    error:
                                        type: string
                                required:
                                    - data
                                type: object
                    description: Bad Request
                "403":
                    content:
                        application/json:
                            schema:
                                properties:
                                    data: {}
                                    error:
                                        type: string
                                required:
                                    - data
                                type: object
                    description: Forbidden
                "404":
                    content:
                        application/json:
                            schema:
                                properties:
                                    data: {}
                                    error:
                                        type: string
                                required:
                                    - data
                                type: object
                    description: Not Found
                "500":
                    content:
                        application/json:
                            schema:
                                properties:
                                    data: {}
                                    error:
                                        type: string
                                required:
                                    - data
                                type: object
                    description: Internal Server Error
            security:
                - apiKey: []
            summary: Delete a watchlist
            tags:
                - UserManagement/watchlist
        get:
            description: Get a specific watchlist by ID for the authenticated user
            operationId: getWatchlist
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    data:
                                        $ref: '#/components/schemas/Watchlist'
                                    error:
                                        type: string
                                required:
                                    - data
                                type: object
                    description: Default response
                "400":
                    content:
                        application/json:
                            schema:
                                properties:
                                    data: {}
                                    error:
                                        type: string
                                required:
                                    - data
                                type: object
                    description: Bad Request
                "403":
                    content:
                        application/json:
                            schema:
                                properties:
                                    data: {}
                                    error:
                                        type: string
                                required:
                                    - data
                                type: object
                    description: Forbidden
                "404":
                    content:
                        application/json:
                            schema:
                                properties:
                                    data: {}
                                    error:
                                        type: string
                                required:
                                    - data
                                type: object
                    description: Not Found
                "500":
                    content:
                        application/json:
                            schema:
                                properties:
                                    data: {}
                                    error:
                                        type: string
                                required:
                                    - data
                                type: object
                    description: Internal Server Error
            security:
                - apiKey: []
            summary: Get a watchlist
            tags:
                - UserManagement/watchlist
        patch:
            description: Update a specific watchlist by ID for the authenticated user
            operationId: updateWatchlist
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    'application/json':
                        schema:
                            $ref: '#/components/schemas/UpdateWatchlistRequest'
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    data:
                                        $ref: '#/components/schemas/Watchlist'
                                    error:
                                        type: string
                                required:
                                    - data
                                type: object
                    description: Default response
                "400":
                    content:
                        application/json:
                            schema:
                                properties:
                                    data: {}
                                    error:
                                        type: string
                                required:
                                    - data
                                type: object
                    description: Bad Request
                "403":
                    content:
                        application/json:
                            schema:
                                properties:
                                    data: {}
                                    error:
                                        type: string
                                required:
                                    - data
                                type: object
                    description: Forbidden
                "404":
                    content:
                        application/json:
                            schema:
                                properties:
                                    data: {}
                                    error:
                                        type: string
                                required:
                                    - data
                                type: object
                    description: Not Found
                "500":
                    content:
                        application/json:
                            schema:
                                properties:
                                    data: {}
                                    error:
                                        type: string
                                required:
                                    - data
                                type: object
                    description: Internal Server Error
            security:
                - apiKey: []
            summary: Update a watchlist
            tags:
                - UserManagement/watchlist
    /user-management/v1/watchlists/{id}/assets:
        patch:
            description: Modify the assets in a specific watchlist by ID for the authenticated user
            operationId: modifyWatchlistAssets
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    'application/json':
                        schema:
                            $ref: '#/components/schemas/ModifyWatchlistAssetsRequest'
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    data:
                                        $ref: '#/components/schemas/Watchlist'
                                    error:
                                        type: string
                                required:
                                    - data
                                type: object
                    description: Default response
                "400":
                    content:
                        application/json:
                            schema:
                                properties:
                                    data: {}
                                    error:
                                        type: string
                                required:
                                    - data
                                type: object
                    description: Bad Request
                "403":
                    content:
                        application/json:
                            schema:
                                properties:
                                    data: {}
                                    error:
                                        type: string
                                required:
                                    - data
                                type: object
                    description: Forbidden
                "404":
                    content:
                        application/json:
                            schema:
                                properties:
                                    data: {}
                                    error:
                                        type: string
                                required:
                                    - data
                                type: object
                    description: Not Found
                "500":
                    content:
                        application/json:
                            schema:
                                properties:
                                    data: {}
                                    error:
                                        type: string
                                required:
                                    - data
                                type: object
                    description: Internal Server Error
            security:
                - apiKey: []
            summary: Modify watchlist assets
            tags:
                - UserManagement/watchlist

servers:
    - description: Messari API
      url: https://api.messari.io
tags:
    - name: CoreMetrics/assets
    - name: CoreMetrics/exchanges
    - name: CoreMetrics/markets
    - name: CoreMetrics/networks
    - name: UserManagement/Credit Allowances
    - name: UserManagement/Permissions
    - name: UserManagement/watchlist
